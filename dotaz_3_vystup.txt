Vysledek:
[ { count: 2, username: 'test' }, { count: 1, username: 'admin' } ]

Exekucni plan prvniho dotazu:
{
  explainVersion: '2',
  stages: [
    {
      '$cursor': {
        queryPlanner: {
          namespace: 'movieDB.reviews',
          indexFilterSet: false,
          parsedQuery: {},
          queryHash: '744C107C',
          planCacheKey: '744C107C',
          maxIndexedOrSolutionsReached: false,
          maxIndexedAndSolutionsReached: false,
          maxScansToExplodeReached: false,
          winningPlan: {
            queryPlan: {
              stage: 'GROUP',
              planNodeId: 2,
              inputStage: {
                stage: 'COLLSCAN',
                planNodeId: 1,
                filter: {},
                direction: 'forward'
              }
            },
            slotBasedPlan: {
              slots: '$$RESULT=s11 env: { s1 = TimeZoneDatabase(Etc/Zulu...Europe/Kiev) (timeZoneDB), s2 = Nothing (SEARCH_META), s3 = 1683471680946 (NOW) }',
              stages: '[2] mkobj s11 [_id = s7, count = s10] true false \n' +
                '[2] project [s10 = doubleDoubleSumFinalize (s8)] \n' +
                '[2] group [s7] [s8 = aggDoubleDoubleSum (1)] spillSlots[s9] mergingExprs[aggMergeDoubleDoubleSums (s9)] \n' +
                '[2] project [s7 = fillEmpty (s6, null)] \n' +
                '[2] project [s6 = getField (s4, "user")] \n' +
                '[1] scan s4 s5 none none none none [] @"7127947e-825b-4695-9a6b-e59f9e1ad66e" true false '
            }
          },
          rejectedPlans: []
        },
        executionStats: {
          executionSuccess: true,
          nReturned: 2,
          executionTimeMillis: 0,
          totalKeysExamined: 0,
          totalDocsExamined: 3,
          executionStages: {
            stage: 'mkobj',
            planNodeId: 2,
            nReturned: 2,
            executionTimeMillisEstimate: 0,
            opens: 1,
            closes: 1,
            saveState: 1,
            restoreState: 1,
            isEOF: 1,
            objSlot: 11,
            fields: [],
            projectFields: [ '_id', 'count' ],
            projectSlots: [ Long("7"), Long("10") ],
            forceNewObject: true,
            returnOldObject: false,
            inputStage: {
              stage: 'project',
              planNodeId: 2,
              nReturned: 2,
              executionTimeMillisEstimate: 0,
              opens: 1,
              closes: 1,
              saveState: 1,
              restoreState: 1,
              isEOF: 1,
              projections: { '10': 'doubleDoubleSumFinalize (s8) ' },
              inputStage: {
                stage: 'group',
                planNodeId: 2,
                nReturned: 2,
                executionTimeMillisEstimate: 0,
                opens: 1,
                closes: 1,
                saveState: 1,
                restoreState: 1,
                isEOF: 1,
                groupBySlots: [ Long("7") ],
                expressions: { '8': 'aggDoubleDoubleSum (1) ' },
                mergingExprs: { '9': 'aggMergeDoubleDoubleSums (s9) ' },
                usedDisk: false,
                numSpills: 0,
                spilledRecords: 0,
                spilledDataStorageSize: 0,
                inputStage: {
                  stage: 'project',
                  planNodeId: 2,
                  nReturned: 3,
                  executionTimeMillisEstimate: 0,
                  opens: 1,
                  closes: 1,
                  saveState: 1,
                  restoreState: 1,
                  isEOF: 1,
                  projections: { '7': 'fillEmpty (s6, null) ' },
                  inputStage: {
                    stage: 'project',
                    planNodeId: 2,
                    nReturned: 3,
                    executionTimeMillisEstimate: 0,
                    opens: 1,
                    closes: 1,
                    saveState: 1,
                    restoreState: 1,
                    isEOF: 1,
                    projections: { '6': 'getField (s4, "user") ' },
                    inputStage: {
                      stage: 'scan',
                      planNodeId: 1,
                      nReturned: 3,
                      executionTimeMillisEstimate: 0,
                      opens: 1,
                      closes: 1,
                      saveState: 1,
                      restoreState: 1,
                      isEOF: 1,
                      numReads: 3,
                      recordSlot: 4,
                      recordIdSlot: 5,
                      fields: [],
                      outputSlots: []
                    }
                  }
                }
              }
            }
          }
        }
      },
      nReturned: Long("2"),
      executionTimeMillisEstimate: Long("0")
    },
    {
      '$lookup': {
        from: 'users',
        as: 'user',
        localField: '_id',
        foreignField: '_id',
        unwinding: { preserveNullAndEmptyArrays: false }
      },
      totalDocsExamined: Long("1"),
      totalKeysExamined: Long("1"),
      collectionScans: Long("0"),
      indexesUsed: [ '_id_' ],
      nReturned: Long("2"),
      executionTimeMillisEstimate: Long("0")
    },
    {
      '$project': { count: true, username: '$user.username', _id: false },
      nReturned: Long("2"),
      executionTimeMillisEstimate: Long("0")
    },
    {
      '$sort': { sortKey: { count: -1 }, limit: Long("10") },
      totalDataSizeSortedBytesEstimate: Long("490"),
      usedDisk: false,
      spills: Long("0"),
      nReturned: Long("2"),
      executionTimeMillisEstimate: Long("0")
    }
  ],
  serverInfo: {
    host: 'b8d990f7be43',
    port: 27017,
    version: '6.0.5',
    gitVersion: 'c9a99c120371d4d4c52cbb15dac34a36ce8d3b1d'
  },
  serverParameters: {
    internalQueryFacetBufferSizeBytes: 104857600,
    internalQueryFacetMaxOutputDocSizeBytes: 104857600,
    internalLookupStageIntermediateDocumentMaxSizeBytes: 104857600,
    internalDocumentSourceGroupMaxMemoryBytes: 104857600,
    internalQueryMaxBlockingSortMemoryUsageBytes: 104857600,
    internalQueryProhibitBlockingMergeOnMongoS: 0,
    internalQueryMaxAddToSetBytes: 104857600,
    internalDocumentSourceSetWindowFieldsMaxMemoryBytes: 104857600
  },
  command: {
    aggregate: 'reviews',
    pipeline: [
      { '$group': { _id: '$user', count: { '$sum': 1 } } },
      {
        '$lookup': {
          from: 'users',
          localField: '_id',
          foreignField: '_id',
          as: 'user'
        }
      },
      { '$unwind': '$user' },
      { '$project': { _id: 0, username: '$user.username', count: 1 } },
      { '$sort': { count: -1 } },
      { '$limit': 10 }
    ],
    cursor: {},
    '$db': 'movieDB'
  },
  ok: 1
}